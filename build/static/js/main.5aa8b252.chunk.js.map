{"version":3,"sources":["components/NotificationBanner.js","components/Persons.js","components/PersonForm.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["NotificationBanner","message","notifType","className","Person","name","number","deletePerson","onClick","Persons","persons","deletePersonWithID","map","person","key","id","PersonForm","newName","newNumber","handleNewName","handleNewNumber","addPerson","onSubmit","value","onChange","type","Filter","handleFilter","baseUrl","axios","get","then","response","data","newPerson","post","delete","update","put","App","useState","setPersons","setNewName","setNewNumber","nameFilter","setNewNameFilter","notifMessage","setNotifMessage","setNotifType","useEffect","personService","allPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","some","window","confirm","personToUpdate","find","udpatedPerson","setTimeout","catch","err","console","log","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"mNAmBeA,EAjBY,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACnC,OAAgB,OAAZD,EACO,KAGO,YAAdC,EAEI,yBAAKC,UAAU,gBAAgBF,GAIrB,UAAdC,EAEA,yBAAKC,UAAU,cAAcF,QAFjC,GCCEG,EAAS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC5B,OACI,6BACKF,EADL,IACYC,EADZ,IACoB,4BAAQE,QAASD,GAAjB,YAKbE,EApBC,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,mBACxB,OACI,6BACKD,EAAQE,KAAI,SAACC,GAAD,OAAY,kBAAC,EAAD,CAAQR,KAAMQ,EAAOR,KAC1CS,IAAKD,EAAOR,KACZC,OAAQO,EAAOP,OACfC,aAAc,kBAAMI,EAAmBE,EAAOE,GAAIF,EAAOR,cC6B1DW,EAnCI,SAAC,GAQd,IANEC,EAMH,EANGA,QACAC,EAKH,EALGA,UACAC,EAIH,EAJGA,cACAC,EAGH,EAHGA,gBACAC,EAEH,EAFGA,UAGJ,OACI,6BACI,0BAAMC,SAAUD,GACZ,sCACU,2BACFE,MAAON,EACPO,SAAUL,KAIlB,wCACY,2BACJI,MAAOL,EACPM,SAAUJ,KAKlB,6BACI,4BAAQK,KAAK,UAAb,WClBLC,EAVA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACd,OACI,kDACsB,2BACVH,SAAUG,M,gBCHxBC,EAAU,eAqBD,EAnBA,WAEX,OADYC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAiB5B,EAdA,SAAEC,GAEb,OADYL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAY5B,EATM,SAAClB,GAClB,OAAOc,IAAMO,OAAN,UAAgBR,EAAhB,YAA2Bb,KAQvB,EALM,SAACA,EAAIsB,GAEtB,OADYR,IAAMS,IAAN,UAAaV,EAAb,YAAwBb,GAAMsB,GAC/BN,MAAM,SAACC,GAAD,OAAcA,EAASC,SCuI7BM,EAnJH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACP9B,EADO,KACE+B,EADF,OAEgBD,mBAAS,IAFzB,mBAEPvB,EAFO,KAEEyB,EAFF,OAGoBF,mBAAS,IAH7B,mBAGPtB,EAHO,KAGIyB,EAHJ,OAIyBH,mBAAS,IAJlC,mBAIPI,EAJO,KAIKC,EAJL,OAK0BL,mBAAS,MALnC,mBAKPM,EALO,KAKOC,EALP,OAMoBP,mBAAS,MAN7B,mBAMPtC,EANO,KAMI8C,EANJ,KAQdC,qBAAU,WACNC,IACKnB,MAAK,SAACoB,GAEHV,EAAWU,QAEpB,IAEH,IA6FMC,EAA+B,KAAfR,EAChBlC,EACAA,EAAQ2C,QAAO,SAACxC,GAAD,OAA6E,IAAjEA,EAAOR,KAAKiD,cAAcC,SAASX,EAAWU,kBAc/E,OACI,6BACI,yCACA,kBAAC,EAAD,CAAoBrD,QAAS6C,EAAc5C,UAAWA,IACtD,kBAAC,EAAD,CAAQyB,aARK,SAAC6B,GAClBX,EAAiBW,EAAMC,OAAOlC,UAS1B,yCACA,kBAAC,EAAD,CACIN,QAASA,EACTC,UAAWA,EACXC,cAtBU,SAACqC,GACnBd,EAAWc,EAAMC,OAAOlC,QAsBhBH,gBAnBY,SAACoC,GACrBb,EAAaa,EAAMC,OAAOlC,QAmBlBF,UAzHM,SAACmC,GAIf,GAHAA,EAAME,iBAGFhD,EAAQiD,MAAK,SAAC9C,GAAD,OAAYA,EAAOR,OAASY,KACzC,GAAI2C,OAAOC,QAAP,UAAkB5C,EAAlB,2EAAoG,CACpG,IAAM6C,EAAiBpD,EAAQqD,MAAK,SAAClD,GAAD,OAAYA,EAAOR,OAASY,KAChE6C,EAAexD,OAASY,EAExBgC,EAA2BY,EAAe/C,GAAI+C,GACzC/B,MAAK,SAACiC,GACHvB,EAAW/B,EAAQE,KAAI,SAACC,GAAD,OAAYA,EAAOE,KAAO+C,EAAe/C,GAC1DF,EACAmD,MAENtB,EAAW,IACXC,EAAa,IACbK,EAAa,WACbD,EAAgB,WAAD,OACAe,EAAezD,OAE9B4D,YAAW,WACPlB,EAAgB,MAChBC,EAAa,QACd,QAENkB,OAAM,SAACC,GACJC,QAAQC,IAAIF,GAEZnB,EAAa,SACbD,EAAgB,kBAAD,OACOe,EAAezD,KADtB,0CAGf4D,YAAW,WACPlB,EAAgB,MAChBC,EAAa,QACd,aAKXoB,QAAQC,IAAI,cAIb,CACH,IAAMnC,EAAY,CACd7B,KAAMY,EACNX,OAAQY,GAEZgC,EAAqBhB,GAChBH,MAAK,SAACuC,GACH7B,EAAW/B,EAAQ6D,OAAOD,IAC1B5B,EAAW,IACXC,EAAa,IACbK,EAAa,WACbD,EAAgB,SAAD,OACFb,EAAU7B,OAEvB4D,YAAW,WACPlB,EAAgB,MAChBC,EAAa,QACd,YA8DX,uCACA,kBAAC,EAAD,CAAStC,QAAS0C,EAAezC,mBAzDd,SAACI,EAAIV,GACxBuD,OAAOC,QAAP,iBAAyBxD,EAAzB,MACA6C,EAA2BnC,GACtBgB,MAAK,WACFU,EAAW/B,EAAQ2C,QAAO,SAAAxC,GAAM,OAAIA,EAAOE,KAAOA,SAGrDmD,OAAM,SAACC,GACJC,QAAQC,IAAIF,GAEZnB,EAAa,SACbD,EAAgB,kBAAD,OACO1C,EADP,0CAGf4D,YAAW,WACPlB,EAAgB,MAChBC,EAAa,QACd,QAIXoB,QAAQC,IAAI,yB,MC7GxBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5aa8b252.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NotificationBanner = ({ message, notifType }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if (notifType === \"success\") {\r\n        return (\r\n            <div className=\"notifSuccess\">{message}</div>\r\n        )\r\n    }\r\n\r\n    if (notifType === \"error\")\r\n    return (\r\n        <div className=\"notifError\">{message}</div>\r\n    )\r\n}\r\n\r\nexport default NotificationBanner","import React from 'react'\r\n\r\nconst Persons = ({ persons, deletePersonWithID }) => {\r\n    return (\r\n        <div>\r\n            {persons.map((person) => <Person name={person.name}\r\n                key={person.name}\r\n                number={person.number}\r\n                deletePerson={() => deletePersonWithID(person.id, person.name)}\r\n            />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Person = ({ name, number, deletePerson }) => {\r\n    return (\r\n        <div>\r\n            {name} {number} <button onClick={deletePerson}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (\r\n    {\r\n        newName,\r\n        newNumber,\r\n        handleNewName,\r\n        handleNewNumber,\r\n        addPerson\r\n    }\r\n) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input\r\n                        value={newName}\r\n                        onChange={handleNewName}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    number: <input\r\n                        value={newNumber}\r\n                        onChange={handleNewNumber}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ( {handleFilter} ) => {\r\n    return (\r\n        <div>\r\n            filter shown with <input\r\n                    onChange={handleFilter}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons' // heroku\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl)\r\n    return req.then((response) => response.data)\r\n}\r\n\r\nconst create = ( newPerson ) => {\r\n    const req = axios.post(baseUrl, newPerson)\r\n    return req.then((response) => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updateNumber = (id, update) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, update)\r\n    return req.then( (response) => response.data )\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    deletePerson,\r\n    updateNumber\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport NotificationBanner from './components/NotificationBanner.js'\r\nimport Persons from './components/Persons.js'\r\nimport PersonForm from './components/PersonForm.js'\r\nimport Filter from './components/Filter.js'\r\nimport personService from './services/persons.js'\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [nameFilter, setNewNameFilter] = useState('')\r\n    const [notifMessage, setNotifMessage] = useState(null)\r\n    const [notifType, setNotifType] = useState(null) // success or error\r\n\r\n    useEffect(() => {\r\n        personService.getAll()\r\n            .then((allPersons) => {\r\n                // console.log(response);\r\n                setPersons(allPersons)\r\n            })\r\n    }, [])\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        // check duplicate\r\n        if (persons.some((person) => person.name === newName)) {\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n                const personToUpdate = persons.find((person) => person.name === newName)\r\n                personToUpdate.number = newNumber\r\n\r\n                personService.updateNumber(personToUpdate.id, personToUpdate)\r\n                    .then((udpatedPerson) => {\r\n                        setPersons(persons.map((person) => person.id !== personToUpdate.id\r\n                            ? person\r\n                            : udpatedPerson\r\n                        ))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                        setNotifType('success')\r\n                        setNotifMessage(\r\n                            `Updated ${personToUpdate.name}`\r\n                        )\r\n                        setTimeout(() => {\r\n                            setNotifMessage(null)\r\n                            setNotifType(null)\r\n                        }, 5000)\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n\r\n                        setNotifType('error')\r\n                        setNotifMessage(\r\n                            `Information of ${personToUpdate.name} has already been removed from server`\r\n                        )\r\n                        setTimeout(() => {\r\n                            setNotifMessage(null)\r\n                            setNotifType(null)\r\n                        }, 5000)\r\n                    })\r\n\r\n                // cancel number update\r\n            } else {\r\n                console.log('cancel');\r\n            }\r\n\r\n            // Brand new entry\r\n        } else {\r\n            const newPerson = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personService.create(newPerson)\r\n                .then((createdPerson) => {\r\n                    setPersons(persons.concat(createdPerson))\r\n                    setNewName('')\r\n                    setNewNumber('')\r\n                    setNotifType('success')\r\n                    setNotifMessage(\r\n                        `Added ${newPerson.name}`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setNotifMessage(null)\r\n                        setNotifType(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    const deletePersonWithID = (id, name) => {\r\n        if (window.confirm(`delete ${name}?`)) {\r\n            personService.deletePerson(id)\r\n                .then(() => {\r\n                    setPersons(persons.filter(person => person.id !== id))\r\n                    // console.log(`deleted ${name} id: ${id}`);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n\r\n                    setNotifType('error')\r\n                    setNotifMessage(\r\n                        `Information of ${name} has already been removed from server`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setNotifMessage(null)\r\n                        setNotifType(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n        else {\r\n            console.log('Cancelled delete');\r\n        }\r\n    }\r\n\r\n    const personsToShow = nameFilter === ''\r\n        ? persons\r\n        : persons.filter((person) => person.name.toLowerCase().includes(nameFilter.toLowerCase()) === true)\r\n\r\n    const handleNewName = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNewNumber = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilter = (event) => {\r\n        setNewNameFilter(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <NotificationBanner message={notifMessage} notifType={notifType} />\r\n            <Filter handleFilter={handleFilter} />\r\n\r\n            <h3>add a new</h3>\r\n            <PersonForm\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                handleNewName={handleNewName}\r\n                handleNewNumber={handleNewNumber}\r\n                addPerson={addPerson}\r\n            />\r\n\r\n            <h3>Numbers</h3>\r\n            <Persons persons={personsToShow} deletePersonWithID={deletePersonWithID} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}
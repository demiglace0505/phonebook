{"version":3,"sources":["components/NotificationBanner.js","components/Persons.js","components/PersonForm.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["NotificationBanner","message","notifType","className","Person","name","number","deletePerson","onClick","Persons","persons","deletePersonWithID","map","person","key","id","PersonForm","newName","newNumber","handleNewName","handleNewNumber","addPerson","onSubmit","value","onChange","type","Filter","handleFilter","baseUrl","axios","get","then","response","data","newPerson","post","delete","update","put","App","useState","setPersons","setNewName","setNewNumber","nameFilter","setNewNameFilter","notifMessage","setNotifMessage","setNotifType","useEffect","personService","allPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","some","window","confirm","personToUpdate","find","newEntry","udpatedPerson","setTimeout","catch","err","console","log","error","createdPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a7585d7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NotificationBanner = ({ message, notifType }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if (notifType === 'success') {\r\n    return (\r\n      <div className=\"notifSuccess\">{message}</div>\r\n    )\r\n  }\r\n\r\n  if (notifType === 'error')\r\n    return (\r\n      <div className=\"notifError\">{message}</div>\r\n    )\r\n}\r\n\r\nexport default NotificationBanner","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Persons = ({ persons, deletePersonWithID }) => {\r\n  return (\r\n    <div>\r\n      {persons.map((person) => <Person name={person.name}\r\n        key={person.name}\r\n        number={person.number}\r\n        deletePerson={() => deletePersonWithID(person.id, person.name)}\r\n      />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nPersons.propTypes = {\r\n  persons: PropTypes.array,\r\n  deletePersonWithID: PropTypes.func\r\n}\r\n\r\n\r\nconst Person = ({ name, number, deletePerson }) => {\r\n  return (\r\n    <div>\r\n      {name} {number} <button onClick={deletePerson}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nPerson.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deletePerson: PropTypes.func\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PersonForm = (\r\n  {\r\n    newName,\r\n    newNumber,\r\n    handleNewName,\r\n    handleNewNumber,\r\n    addPerson\r\n  }\r\n) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input\r\n            value={newName}\r\n            onChange={handleNewName}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          number: <input\r\n            value={newNumber}\r\n            onChange={handleNewNumber}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nPersonForm.propTypes = {\r\n  newName: PropTypes.string,\r\n  newNumber: PropTypes.string,\r\n  handleNewName: PropTypes.func,\r\n  handleNewNumber: PropTypes.func,\r\n  addPerson: PropTypes.func\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ( {handleFilter} ) => {\r\n  return (\r\n    <div>\r\n            filter shown with <input\r\n        onChange={handleFilter}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  handleFilter: PropTypes.func\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n\r\n// const baseUrl = 'http://localhost:3001/persons' //for json-server\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl)\r\n  return req.then((response) => response.data)\r\n}\r\n\r\nconst create = ( newPerson ) => {\r\n  const req = axios.post(baseUrl, newPerson)\r\n  return req.then((response) => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst updateNumber = (id, update) => {\r\n  const req = axios.put(`${baseUrl}/${id}`, update)\r\n  return req.then( (response) => response.data )\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deletePerson,\r\n  updateNumber\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport NotificationBanner from './components/NotificationBanner.js'\r\nimport Persons from './components/Persons.js'\r\nimport PersonForm from './components/PersonForm.js'\r\nimport Filter from './components/Filter.js'\r\nimport personService from './services/persons.js'\r\n\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [nameFilter, setNewNameFilter] = useState('')\r\n  const [notifMessage, setNotifMessage] = useState(null)\r\n  const [notifType, setNotifType] = useState(null) // success or error\r\n\r\n  useEffect(() => {\r\n    personService.getAll()\r\n      .then((allPersons) => {\r\n        // console.log(response);\r\n        setPersons(allPersons)\r\n      })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    // check duplicate\r\n    if (persons.some((person) => person.name === newName)) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\r\n        const personToUpdate = persons.find((person) => person.name === newName)\r\n        const newEntry = {\r\n          name: personToUpdate.name,\r\n          number: newNumber\r\n        }\r\n\r\n        personService.updateNumber(personToUpdate.id, newEntry)\r\n          .then((udpatedPerson) => {\r\n            setPersons(persons.map((person) => person.id !== personToUpdate.id\r\n              ? person\r\n              : udpatedPerson\r\n            ))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setNotifType('success')\r\n            setNotifMessage(\r\n              `Updated ${personToUpdate.name}`\r\n            )\r\n            setTimeout(() => {\r\n              setNotifMessage(null)\r\n              setNotifType(null)\r\n            }, 5000)\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.response.data)\r\n\r\n            setNotifType('error')\r\n            setNotifMessage(\r\n              `${err.response.data.error}`\r\n            )\r\n            setTimeout(() => {\r\n              setNotifMessage(null)\r\n              setNotifType(null)\r\n            }, 5000)\r\n          })\r\n\r\n        // cancel number update\r\n      } else {\r\n        console.log('cancel')\r\n      }\r\n\r\n      // Brand new entry\r\n    } else {\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      personService.create(newPerson)\r\n        .then((createdPerson) => {\r\n          setPersons(persons.concat(createdPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setNotifType('success')\r\n          setNotifMessage(\r\n            `Added ${newPerson.name}`\r\n          )\r\n          setTimeout(() => {\r\n            setNotifMessage(null)\r\n            setNotifType(null)\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data)\r\n          setNotifType('error')\r\n          setNotifMessage(`${error.response.data.error}`)\r\n          setTimeout(() => {\r\n            setNotifMessage(null)\r\n            setNotifType(null)\r\n          }, 5000)\r\n        })\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const deletePersonWithID = (id, name) => {\r\n    if (window.confirm(`delete ${name}?`)) {\r\n      personService.deletePerson(id)\r\n        .then(() => {\r\n          setPersons(persons.filter(person => person.id !== id))\r\n          // console.log(`deleted ${name} id: ${id}`);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n\r\n          setNotifType('error')\r\n          setNotifMessage(\r\n            `Information of ${name} has already been removed from server`\r\n          )\r\n          setTimeout(() => {\r\n            setNotifMessage(null)\r\n            setNotifType(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n    else {\r\n      console.log('Cancelled delete')\r\n    }\r\n  }\r\n\r\n  const personsToShow = nameFilter === ''\r\n    ? persons\r\n    : persons.filter((person) => person.name.toLowerCase().includes(nameFilter.toLowerCase()) === true)\r\n\r\n  const handleNewName = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNewNumber = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n    setNewNameFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <NotificationBanner message={notifMessage} notifType={notifType} />\r\n      <Filter handleFilter={handleFilter} />\r\n\r\n      <h3>add a new</h3>\r\n      <PersonForm\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNewName={handleNewName}\r\n        handleNewNumber={handleNewNumber}\r\n        addPerson={addPerson}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n      <Persons persons={personsToShow} deletePersonWithID={deletePersonWithID} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}